// scss-docs-start btn-variant-mixin

// The trick with getting these buttons to work is figuring out
// the ratio between the background, border, and box-shadow.
// The lightest color is the first inset on the box-shadow: lighten($background, 15%) 
// Then the background                                      default
// Then the second inset box-shadow                         darken($background, 5%)
// The border is the darkest color.                         darken($background, 10%);


@mixin button-variant(
  $background,
  $border,
  $key,

  $color: color-contrast($background),
  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),
  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),
  $hover-color: color-contrast($hover-background),
  $active-background: if($color == $color-contrast-light, shade-color($background,$btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),
  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),
  $active-color: color-contrast($active-background),
  $disabled-background: $background,
  $disabled-border: $border,
  $disabled-color: color-contrast($disabled-background)
) {
  color: $color;
  text-shadow: 0px 1px 0 darken($background, 25%);
  @include gradient-bg($background);

  // The border is the darkest color.
  border-color: darken($background, 10%); //* Added
  background-color: if($key == dark, lighten($background, 10%), $background);


  // The lightest color is the first inset on the box-shadow -the pseudo border
  // Previously instead of shade-color($background, 15) I was using darken($background, 10%), but this works
  // much better. I haven't tried tint-color() yet.
  box-shadow: 0 0 0 1px lighten($background, 15%) inset, 0 -1em 0 shade-color($background, 10) inset; //* Added; 

  // When hovered, the button's background gets lighter, and the
  // button's box-shadow gets lighter.
  &:hover {
    color: $hover-color;
    @include gradient-bg($hover-background);
    background-color: if($key == dark, lighten($background, 15%), lighten($background, 5%));           //* Added
    box-shadow: 0 0 0 1px lighten($background, 20%) inset, 0 -1em 0 shade-color($background, 5) inset; //* Added; 
  }

  .btn-check:focus + &,
  &:focus {
    color: $hover-color;
    @include gradient-bg($hover-background);
    background-color: if($key == dark, lighten($background, 15%), lighten($background, 5%));           //* Added
    box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5),
                0 0 0 1px lighten($background, 20%) inset, 0 -1em 0 shade-color($background, 5) inset; //* Added; 
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $active-color;
    background-color: if($key == dark, lighten($background, 15%), lighten($background, 5%)); //* Added
    box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5),
                0 0 0 1px lighten($background, 20%) inset, 0 -1em 0 shade-color($background, 5) inset; //* Added; 
    &:focus {
      background-color: if($key == dark, lighten($background, 15%), lighten($background, 5%)); //* Added
      box-shadow: 0 0 0 $btn-focus-width rgba(mix($color, $border, 15%), .5),
                0 0 0 1px lighten($background, 20%) inset, 0 -1em 0 shade-color($background, 5) inset; //* Added; 
    }
  }

  &:disabled,
  &.disabled {
    color: $disabled-color;
    background-color: $disabled-background;
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: $disabled-border;
  }
}
// scss-docs-end btn-variant-mixin



//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);
  @include transition($btn-transition);

  &:hover {
    color: $body-color;
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  .btn-check:focus + &,
  &:focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active {
    @include box-shadow($btn-active-box-shadow); //! This might need fixing.

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow); //! This might need fixing.
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    pointer-events: none;
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }
}


//
// Alternate buttons
//

// scss-docs-start btn-variant-loops
@each $key, $value in $theme-colors {
  .btn-#{$key} {
    @include button-variant($value, $value, $key);
  }
}


//! I have not modified this in any way.
//! I could bring in and overwrite button-outline-variant().
@each $key, $value in $theme-colors {
  .btn-outline-#{$key} {
    @include button-outline-variant($value);
  }
}
// scss-docs-end btn-variant-loops


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $btn-link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


//
// Button Sizes
//


//! It's likely that the button size will affect the shadowing on these fancy buttons,
//! so I should probably upgrade this as well.
.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}
