{"version":3,"sources":["contexts/AppContext/reducers/index.js","contexts/AppContext/action-types/index.js","contexts/AppContext/action-creators/countActions.js","contexts/AppContext/action-creators/randomNumberActions.js","contexts/AppContext/action-creators/index.js","contexts/AppContext/reducers/countReducer.js","contexts/AppContext/reducers/randomNumberReducer.js","contexts/AppContext/AppContext.js","components/shared/Page.js","components/shared/Title.js","components/shared/Counter.js","components/shared/RandomNumberGenerator.js","components/pages/HomePage/HomePage.js","components/pages/AboutPage/AboutPage.js","components/pages/NotFoundPage.js","components/navigation/Router.js","components/navigation/Navbar/Navicon1.js","components/navigation/Navbar/Navbar.js","App.js","index.js"],"names":["slices","INCREMENT_COUNT","DECREMENT_COUNT","RANDOMIZE_NUMBER","countActions","incrementCount","value","type","payload","decrementCount","randomNumberActions","randomizeNumber","actionCreators","initialState","count","randomNumber","rootReducer","countState","state","action","randomNumberState","Math","round","random","Object","keys","reduce","acc","prop","AppContext","createContext","Consumer","AppProvider","children","useReducer","boundActionCreators","dispatch","i","key","length","bindActionCreators","Provider","useAppContext","useContext","Page","className","style","flex","Title","props","as","Component","Container","Counter","maxWidth","fontSize","lineHeight","minWidth","onClick","RandomNumberGenerator","HomePage","AboutPage","NotFoundPage","color","fontFamily","textShadow","width","margin","filter","viewBox","fill","d","Router","exact","path","render","component","Navicon1","show","toggleCollapse","Navbar","brand","useState","setShow","isTransitioning","setIsTransitioning","collapseClassName","setCollapseClassName","collapseStyle","setCollapseStyle","collapseRef","useRef","hasMountedRef","useEffect","current","setTimeout","height","getBoundingClientRect","hasOwnProperty","offsetHeight","scrollHeight","id","to","currentValue","ref","activeClassName","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2bf789a6.chunk.js","sourcesContent":["import countReducer        from './countReducer';\nimport randomNumberReducer from './randomNumberReducer';\n\n\n/* =============================================================================\n                        \n============================================================================= */\n////////////////////////////////////////////////////////////////////////////////\n//\n//  Initially I was using the combineReducers from: \n//  https://codezup.com/how-to-combine-multiple-reducers-in-react-hooks-usereducer/\n//  But it wasn't working correctly. This works much better\n//  https://stackoverflow.com/questions/59200785/react-usereducer-how-to-combine-multiple-reducers\n//\n//      const combineReducers = (slices) => (state, action) =>\n//        Object.keys(slices).reduce( // use for..in loop, if you prefer it\n//          (acc, prop) => ({\n//            ...acc,\n//            [prop]: slices[prop](acc[prop], action),\n//          }),\n//          state\n//        );\n//\n//\n//  The combineReducers below is the same as above, but a bit easier to read.\n//  This version works great, but it would be interesting to try to extract the\n//  redux version and implement it instead. \n//\n////////////////////////////////////////////////////////////////////////////////\n\n\nconst combineReducers = (slices) => {\n  return (\n    function rootReducer(state, action){\n      return Object.keys(slices).reduce(\n        (acc, prop) => {\n          return {\n            ...acc,\n            [prop]: slices[prop](acc[prop], action),\n          }\n        },\n        state\n      );\n    }\n  );\n};\n  \n\n// By convention, some would name the properties count and randomNumber,\n// but that's not actually what they represent. They represent slices of\n// state, and so 'State' is appended to the end of each property.\nexport const rootReducer = combineReducers({\n  countState:        countReducer,\n  randomNumberState: randomNumberReducer\n});","// It's best practice to use constants.\n// Also it's not uncommon to keep ALL action types in a single file.\n// This way we know for sure that we have not created a duplicate constant.\n\n\n// Count Action Types\nexport const INCREMENT_COUNT = 'INCREMENT_COUNT';\nexport const DECREMENT_COUNT = 'DECREMENT_COUNT';\nexport const RESET_COUNT     = 'RESET_COUNT';\n\n\n// Random Number Action Types\n// In larger applications it's very important to have highly specific\n// actions because when an action is dispatched it goes to ALL reducers!\nexport const RANDOMIZE_NUMBER = 'RANDOMIZE_NUMBER';\n\n","import { INCREMENT_COUNT, DECREMENT_COUNT } from '../action-types';\n\n\nconst incrementCount = (value) => {\n  return { type: INCREMENT_COUNT, payload: { value: value }  };\n};\n\n\nconst decrementCount = (value) => {\n  return { type: DECREMENT_COUNT, payload: { value: value } };\n};\n\n\n// Export an object of all action creators. They will then get merged \n// into a single actionCreators object in the local index.js\nexport const countActions = {\n  incrementCount,\n  decrementCount\n};\n","import { RANDOMIZE_NUMBER } from '../action-types';\n\n\nconst randomizeNumber = () => {\n  return { type: RANDOMIZE_NUMBER };\n};\n\n\n// Export an object of all action creators. They will then get merged \n// into a single actionCreators object in the local index.js\nexport const randomNumberActions = { randomizeNumber };\n","import { countActions }        from './countActions';\nimport { randomNumberActions } from './randomNumberActions';\n\n// All action creators are spread into a single object, \n// this object is then passed into the bindActionCreators helper within AppContext file.\nexport const actionCreators = {\n  ...countActions,\n  ...randomNumberActions\n};","import { INCREMENT_COUNT, DECREMENT_COUNT /*, RESET_COUNT */ } from '../action-types';\n\n\nconst initialState = {\n  count: 0, \n};\n\n\nconst countReducer = (state = initialState, action = {}) => {\n  switch (action.type){\n    \n    case INCREMENT_COUNT: return { ...state, count: state.count + action.payload.value };\n    case DECREMENT_COUNT: return { ...state, count: state.count - action.payload.value };\n    // case RESET_COUNT :    return { ...state, count: action.payload.value };\n    default:              return state;\n  }\n};\n\n\nexport default countReducer;\n\n\n\n\n","import { RANDOMIZE_NUMBER } from '../action-types';\n\n\nconst initialState = {\n  randomNumber: 0\n};\n\n\nconst randomNumberReducer = (state = initialState, action = {}) => {\n  switch (action.type){\n    case RANDOMIZE_NUMBER : {\n      return {\n        ...state,\n        // Initially, I called it value, but that's a bad idea because \n        // 'value' is often meant to indicate the context value.\n        randomNumber: Math.round(Math.random()*100) \n      }\n    }\n\n    default: return state\n  }\n}\n\n\nexport default randomNumberReducer;","import React, { createContext, useReducer, useContext } from 'react';\nimport { actionCreators }                               from './action-creators';\nimport { rootReducer }                                  from './reducers';\n\n\n////////////////////////////////////////////////////////////////////////////////\n//\n//  In order to initialize the default values of each of the separate reducers, \n//  we can run the reducer once outside of the the component.\n//  Conversely, you could also do this: \n//  const [ state, dispatch ] = useReducer(rootReducer, null, () => rootReducer({}, { type: \"RUN_ROOT_REDUCER\" })); \n//  Or even this seems to work\n//  const [ state, dispatch ] = useReducer(rootReducer, rootReducer({}, { type: \"RUN_ROOT_REDUCER\" })); \n//\n////////////////////////////////////////////////////////////////////////////////\nconst initialState = rootReducer({}, { type: \"RUN_ROOT_REDUCER_TO_INITIALIZE_DEFAULT_STATE_OF_EACH_REDUCER\" });\n\n\nconst bindActionCreators = (dispatch, actionCreators) => {\n  const keys                = Object.keys(actionCreators);\n  const boundActionCreators = {};\n  for (let i = 0; i < keys.length; i++){\n    const key = keys[i];\n    boundActionCreators[key] = (...args) => dispatch(actionCreators[key](...args));\n  }\n  return boundActionCreators;\n};\n\n\nexport const AppContext  = createContext({});\nexport const AppConsumer = AppContext.Consumer;\n\n\n/* =============================================================================\n                        \n============================================================================= */\n\n\nexport function AppProvider({ children }){\n  const [ state, dispatch ] = useReducer(rootReducer, initialState); \n  const boundActionCreators = bindActionCreators(dispatch, actionCreators);\n  // Because we're binding the actionCreators here and spreading them \n  // into value, there's really no need to expose dispatch.\n  const value = { state/*, dispatch*/, ...boundActionCreators };\n\n\n  // Can also do <AppContext.Provider value={value} {...props} />, \n  // but it's less clear that you're passing children.\n  return (\n    <AppContext.Provider value={value}>\n      { children }\n    </AppContext.Provider>\n  );\n}\n\n\nexport function useAppContext(){\n  return useContext(AppContext);\n}","import React from 'react'; \n\n\n///////////////////////////////////////////////////////////////////////////////////\n//\n//  This is a very simple component. Currently, the only goal of this\n//  component is to create a wrapper element that has flex: 1 on it.\n//  This assumes that its parent is going to have display: flex, flex-direction:column.\n//  The end result is that each Page will then take as much vertical space as\n//  is left within the parent element. This is mostly useful for pages that \n//  have minimal content, but we want it to stretch to at least the full length \n//  of the screen, perhaps because we have a background-color, etc.\n//\n//  Using a container class with paddding, etc is purposefully avoided because\n//  some pages will not want padding (e.g., a landing page with a hero section).\n//  This means that in many pages, the first child of Page will be a container.\n//\n//  The other benefit of having a Page component is that abstracts all base styles\n//  for the page. This means that if we ever need to change those styles, we only\n//  have to do it here, rather than in every single page. Admittedly, you\n//  could just use <div className=\"page\"> as the top-level element in any\n//  component intended for use as a page. I just think this is cleaner.\n//\n///////////////////////////////////////////////////////////////////////////////////\n\n\nexport function Page({ className = '', style = {}, children }){\n  return (\n    <div className={className} style={{ flex: '1', ...style }}>\n      { children }\n    </div>\n  );\n}\n\n\nfunction PageContainer({ className = '', style = {}, children }){\n  return (\n    <div \n      className={ className ? className : \"container-fluid pt-5 px-md-5\" }\n      style={style}\n    >{ children }</div>\n  );\n}\n\n\n// react-bootstrap does this kind of thing.\nPage.Container = PageContainer;\n","import React from 'react'; \n\n\n// https://levelup.gitconnected.com/create-more-extensible-react-components-with-the-as-prop-pattern-b79bcbcf4024\nexport function Title(props){\n  const { children, as: Component = 'h1', className = '', style = {} } = props;\n\n  // {...props} is used to pass in any additional props. For example, if using <a>,\n  // one could pass in href, target, etc.\n  return <Component className={className} style={style} {...props}>{children}</Component>\n}","import React             from 'react';\n//import { useAppContext } from '../../contexts/AppContext';\nimport { useAppContext } from '../../contexts';\n\n/* ==================================================================\n\n================================================================== */\n\n\nexport const Counter = () => {\n  const value = useAppContext();\n  const { state, incrementCount, decrementCount } = value;\n\n\n  return (\n    <div \n      className=\"d-flex justify-content-center align-items-center mx-auto mb-5 p-3 bg-light border border-2 border-blue rounded-3 shadow-sm\"\n      style={{ maxWidth: 250 }}\n    >\n      <button \n        className=\"btn btn-outline-blue font-montserrat\"\n        style={{ fontSize: 32, lineHeight: 1, minWidth: 50 }} \n        onClick={() => decrementCount(1)}\n      >-</button>\n\n      <span \n        className=\"mx-4 font-montserrat text-blue text-center\" \n        style={{ fontSize: 32, lineHeight: 1 }}\n      >{ state.countState.count }</span>\n\n\n      <button \n        className=\"btn btn-outline-blue font-montserrat\"     \n        style={{ fontSize: 32, lineHeight: 1, minWidth: 50 }} \n        onClick={() => incrementCount(1)}\n      >+</button>\n    </div>\n  );\n};\n\n\n","import React             from 'react';\nimport { useAppContext } from '../../contexts/AppContext';\n\n\n/* ==================================================================\n\n================================================================== */\n\n\nexport const RandomNumberGenerator = () => {\n  const { state: { randomNumberState }, randomizeNumber } = useAppContext();\n  const { randomNumber } = randomNumberState;\n\n\n  return (\n    <div\n      className=\"mx-auto mb-5 p-3 bg-light border border-2 border-blue rounded-3 shadow-sm\"\n      style={{ maxWidth: 250 }}\n    >\n      <div \n        className=\"mb-3 font-montserrat text-blue text-center\" \n        style={{ fontSize: 32, lineHeight: 1 }}\n      >{ randomNumber }</div>\n\n      <button \n        className=\"d-block mx-auto btn btn-outline-blue font-montserrat\" \n        \n        onClick={randomizeNumber}\n      >Random Number</button>\n    </div>\n  );\n};\n\n","import React                     from 'react';\nimport { Page, Title, Counter, RandomNumberGenerator } from  '../../shared';\n\n\n\nexport function HomePage(props){\n\n  return (\n    <Page>\n      <Page.Container>\n        <Title as=\"h2\" className=\"mb-5 text-white-3d text-center\">Combined Reducers</Title>\n\n        <div className=\"horizontal-ruler\">\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        </div>\n\n        <Counter />\n\n        <RandomNumberGenerator /> \n      </Page.Container>\n    </Page>     \n  );\n}\n","import React           from 'react';\nimport { Page, Title } from  '../../shared';\n\n\nexport function AboutPage(props){\n  return (\n    <Page>\n      <Page.Container>\n        <Title as=\"h2\" className=\"mb-5 text-white-3d text-center\">About</Title>\n        \n\n        <div className=\"horizontal-ruler\">\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        </div>\n\n\n        <p className=\"text-gray\">This demo demonstrates a clean pattern for combining various\n        reducers into a <em>single</em> <code>useReducer</code>, which is then exposed through a context provider.\n        Redux offers global accessibility, modularity, and predictability. This pattern does that as well, and therefore\n        eliminates the need for Redux.</p>\n\n\n        <p className=\"text-gray\">It's obviously more involved than just this function, \n        but the <code>combineReducers</code> helper is at the heart of it:</p>\n\n\n        <pre><code>{`\n  const combineReducers = (slices) => {\n    return (\n      function rootReducer(state, action){\n        return Object.keys(slices).reduce(\n          (acc, prop) => {\n            return {\n              ...acc,\n              [prop]: slices[prop](acc[prop], action),\n            }\n          },\n          state\n        );\n      }\n    );\n  };\n        `}</code></pre>\n      </Page.Container>\n    </Page>     \n  );\n}\n","import React           from 'react'; \nimport { Page, Title } from '../shared';\n\n\nexport function NotFoundPage(){\n  return (\n    <Page>\n      <Page.Container>\n        <h1 \n          className=\"mb-5 text-center\" \n          style={{ color: '#FF355E', fontFamily: 'Creepster', fontSize: 64, textShadow: '0px 2px 4px rgba(0,0,0,0.5)' }}\n        >Not Found!!!</h1>\n\n\n        <div className=\"horizontal-ruler red\">\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        </div>\n\n        \n        <div className=\"mx-auto\" style={{ width: '40%' }}>\n          <svg \n            style={{ margin: '0 auto', width: '100%', filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.5))' }}\n            viewBox=\"0 0 512 512\" \n            fill=\"#FF355E\"\n          >\n            <path d=\"M296.606,364.393l-29.999-30c-5.857-5.858-15.355-5.858-21.213,0l-30,30C205.985,373.801,212.646,390,226,390H286\n            C299.304,390,306.05,373.836,296.606,364.393z\"/>\n          \n            <path d=\"M165.999,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001S241,296.354,241,254.997\n            C241,213.642,207.354,179.997,165.999,179.997z M165.999,300.198c-24.813,0-45.2-20.387-45.2-45.2s20.387-45.2,45.2-45.2\n            s45.2,20.387,45.2,45.2S190.812,300.198,165.999,300.198z\"/>\n            \n            <path d=\"M346.001,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001\n            c41.355,0,75.001-33.645,75.001-75.001S387.356,179.997,346.001,179.997z M346.001,300.198c-24.813,0-45.2-20.387-45.2-45.2\n            s20.387-45.2,45.2-45.2s45.201,20.387,45.201,45.2S370.814,300.198,346.001,300.198z\"/>\n            \n            <path d=\"M476.108,270.988c15.607-74.732-7.02-151.096-61.007-205.086v-0.001C372.602,23.404,316.099,0,256,0\n            C195.901,0,139.398,23.404,96.898,65.902c-53.869,53.87-76.716,130.182-61.007,205.091c-6.143,17.917-6.485,37.065-0.951,55.682\n            c9.404,31.617,35.56,54.97,68.461,61.251c3.795,1.08,4.018,0.017,11.46,1.242c2.047,0.337,4.001,0.621,6.139,0.763L121,447.954\n            c0,18.193,10.705,34.432,27.272,41.369c24.699,10.343,63.434,22.671,107.706,22.675c0.008,0,0.015,0.001,0.023,0.001\n            c0.008,0,0.016-0.001,0.023-0.001c44.269-0.004,83.006-12.333,107.709-22.676c16.565-6.938,27.269-23.176,27.269-41.367v-58.095\n            c2.077-0.139,4.014-0.403,6.046-0.714c7.929-1.213,8.245-0.09,12.239-1.437c32.914-6.607,58.868-30.138,68.004-61.833\n            C482.584,307.52,482.162,288.646,476.108,270.988z M448.465,317.568c-6.117,21.222-23.856,36.907-46.311,40.962\n            c-12.258,0.374-10.552,2.829-23.167,0.267c-9.289-1.887-17.985,5.224-17.985,14.7v74.458c0,6.066-3.477,11.442-8.856,13.696\n            c-5.484,2.296-12.864,4.862-21.343,7.605v-32.457c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v40.324\n            c-9.389,1.89-19.669,3.176-30.2,3.93V436.8c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v44.453\n            c-10.531-0.753-20.811-2.44-30.2-4.329V436.8c0-8.284-6.516-14.8-14.8-14.8s-15,6.716-15,15v32.457\n            c-8.478-2.743-15.658-5.509-21.141-7.805c-5.382-2.254-9.059-7.83-9.059-13.897l0.002-74.45c0-9.462-8.482-16.39-17.784-14.501\n            c-13.377,2.716-10.435,0.035-23.659-0.285c-21.986-4.08-39.448-19.506-45.661-40.396c-4.049-13.621-3.459-27.605,1.707-40.441\n            c1.144-2.843,1.39-5.968,0.705-8.954c-15.458-67.379,5.15-134.755,52.005-181.612C154.945,50.284,203.914,29.8,256,29.8\n            s101.055,20.483,137.887,57.314c47.708,47.711,67.151,115.603,52.006,181.611c-0.685,2.987-0.439,6.112,0.705,8.954\n            C451.693,290.339,452.338,304.132,448.465,317.568z\"/>\n          </svg>\n        </div>\n\n      </Page.Container>\n    </Page>     \n  );\n}\n","import React             from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { HomePage  }     from '../pages/HomePage';\nimport { AboutPage  }    from '../pages/AboutPage';\nimport { NotFoundPage }  from '../pages/NotFoundPage';\n\n\nconst Router = (props) => {\n  const { value } = props;\n\n  return (\n    <Switch>  \n      <Route \n        exact path=\"/\"\n        render={(props) => {\n          return <HomePage {...props} value={value}  />;\n        }}\n      />\n      \n      <Route \n        exact path=\"/about\"\n        render={(props) => {\n          return <AboutPage {...props} value={value}  />;\n        }}\n      />\n\n      <Route component={NotFoundPage} />\n    </Switch>\n  )\n};\n\n\nexport default Router;\n\n","import React from 'react';\n\n\nexport const Navicon1 = ({ show, toggleCollapse }) => { \n  return (\n    <button\n      onClick={toggleCollapse} \n      className={`btn hamburger-container hamburger-squeeze align-self-center user-select-none${show ? ' active' : ''}`}\n    >\n      <div className=\"hamburger-inner\"></div>\n    </button>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { Navicon1 }      from './Navicon1'; // eslint-disable-line\nimport { Navicon2 }      from './Navicon2'; // eslint-disable-line\nimport './Navbar.scss';\n\n\n// Since this component is generally only used once in the app, I got\n// lazy and decided not to create props for textColor bgColor, etc.\n// Instead I just set it all with the stylesheet.\nexport function Navbar({ brand = \"DavTek Industries\" }){\n  const [ show, setShow ] = useState(false);\n  ////////////////////////////////////////////////////////////////////////////////////\n  //\n  //  isTransitioning was implemented to prevent the possibility of button mashing\n  //  causing the navicon and the menu to fall out of sync. I don't even think that's\n  //  possible because everything is handled declaratively. In any case, it is set\n  //  during parts 1 and 4 respectively of opening and closing, and it is read within the\n  //  toggleCollapse method, and used as a flag to conditionally return early if already \n  //  transitioning. It's really not needed, but doesn't hurt at all...\n  //\n  ////////////////////////////////////////////////////////////////////////////////////\n  const [ isTransitioning,  setIsTransitioning ]  = useState(false);\n  const [collapseClassName, setCollapseClassName] = useState(\"collapse navbar-collapse\");\n  const [collapseStyle,     setCollapseStyle ]    = useState({});\n  const collapseRef                               = useRef();\n\n  // hasMountedRef preventd the first useEffect from running on mount,\n  // which would cause the links to blink open.\n  const hasMountedRef                             = useRef(false);\n  const animationTime                             = 350; // 0.35s\n\n\n  const toggleCollapse = () => {\n    if (isTransitioning){ return; }\n    setShow(currentValue => !currentValue);\n  };\n\n\n  useEffect(() => {\n    if (hasMountedRef.current === true){\n      if (show === true){\n        //* Opening Part 1.\n        setIsTransitioning(true); \n        setCollapseClassName(\"collapse navbar-collapse collapsing opening show\"); // .collapsing will Make height: 0px\n  \n        //* Opening Part 3.\n        setTimeout(() => { \n          if (show === true){ setCollapseClassName(\"collapse navbar-collapse open show\"); }\n        }, animationTime);\n      }\n  \n  \n      else if (show === false){\n        //* Closing Part 1.\n        setIsTransitioning(true); \n        const height = collapseRef.current.getBoundingClientRect().height; \n        setCollapseStyle({ height: `${height}px` });\n  \n        ////////////////////////////////////////////////////////////////////////////////////\n        //\n        //  Gotcha: \n        //\n        //  After setCollapseStyle({ height: `${height}px` }); we want to force reflow.\n        //  And after we force the reflow, we want to set new classes, and then set a timeout, etc.\n        //\n        //    void collapseRef.current.offsetHeight; // https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/\n        //\n        //    setCollapseClassName(\"collapse navbar-collapse collapsing closing show\");\n        //\n        //    setTimeout(() => {\n        //      if (show === false){ setCollapseClassName(\"collapse navbar-collapse closed\"); }\n        //    }, animationTime);\n        //\n        //\n        //  The problem is that setCollapseStyle({ height: `${height}px` }); will trigger a rerender,\n        //  and it seems like the reflow happens before the rerender finishes.\n        //  The solution is to setCollapseStyle({ height: `${height}px` }), then run\n        //  a separate useEffect that checks for:\n        //  \n        //    if (show === false && collapseStyle.hasOwnProperty('height')){ ... }\n        //\n        //\n        //  This condition is only true right at this point, and once it's true we know we\n        //  can safely force the reflow.\n        //\n        ////////////////////////////////////////////////////////////////////////////////////\n      }\n    } // End of if (hasMountedRef.current === true){ ... }\n\n\n    else { hasMountedRef.current = true; }    \n  }, [show]);\n\n  \n  useEffect(() => {\n    //* Closing Part 2.\n    if (show === false && collapseStyle.hasOwnProperty('height')){\n      // Force reflow...\n      //const obligatoryAssignment = collapseRef.current.offsetHeight; // eslint-disable-line\n      void collapseRef.current.offsetHeight; // https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/\n      setCollapseClassName(\"collapse navbar-collapse collapsing closing show\");\n\n      //* Closing Part 4.\n      setTimeout(() => {\n        if (show === false){ \n          setCollapseClassName(\"collapse navbar-collapse closed\"); \n          setIsTransitioning(false); \n        }\n      }, animationTime);\n    }\n  }, [show, collapseStyle]);\n\n\n  // Setting height must be done AFTER the classes have been applied.\n  useEffect(() => {\n    //* Opening Part 2.\n    if (show === true && collapseClassName === \"collapse navbar-collapse collapsing opening show\"){\n      setCollapseStyle({ height: `${collapseRef.current.scrollHeight}px` });\n    }\n\n    //* Opening part 4.\n    if (show === true && collapseClassName === \"collapse navbar-collapse open show\"){\n      // Remove the height set programmatically. Why? so that the size of the .navbar-collapse\n      // can be controlled by the CSS, so it will be open or closed depending on breakpoint.\n      setCollapseStyle({});\n      setIsTransitioning(false); \n    }\n\n\n    //* Closing Part 3.\n    if (show === false && collapseClassName === \"collapse navbar-collapse collapsing closing show\"){\n      // Remove the height set programmatically in closing part 1.\n      // This allows collapsing to transition from that height down to 0.\n      // collapseRef.current.style.height = ''; \n      setCollapseStyle({ });\n    }\n  }, [show, collapseClassName]);\n\n\n  return (\n    <nav id=\"primary-navigation\" className=\"navbar navbar-expand-md navbar-dark bg-blue\">\n      <div className=\"container-fluid\">\n        <Link id=\"brand\" className=\"navbar-brand font-montserrat\" to=\"/\">{brand}</Link>\n        <Navicon1 show={show} toggleCollapse={toggleCollapse} /> \n        {/* <Navicon2 toggleCollapse={toggleCollapse} /> */}\n\n        <div ref={collapseRef} className={collapseClassName} style={collapseStyle}>\n          <div className=\"navbar-nav ms-auto\">\n            <NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"/about\">About</NavLink>\n          </div>\n        </div>{/* End of <div className collapse navbar-collapse\"> */}\n      </div>{/* End of <div className=\"container-fluid\"> */}\n    </nav>\n  );\n}","import React             from 'react';\nimport { useAppContext } from './contexts/AppContext';\nimport { HashRouter }    from 'react-router-dom'; // HashRouter generally works better for GitHub, but normally use BrowserRouter.\nimport Router            from './components/navigation/Router';\nimport { Navbar }        from './components/navigation/Navbar';\n\nimport './scss/bootstrap/bootstrap-icons.css';\nimport './scss/bootstrap/custom-bootstrap.scss';\nimport './scss/App.scss';\n\n\nfunction App(){  \n  const value = useAppContext();\n\n  \n  return (\n    <HashRouter>\n      <header id=\"primary-header\">\n        <Navbar /> \n      </header>\n\n      <main>\n        <Router value={value} />\n      </main>\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n\n","import ReactDOM         from 'react-dom';\nimport App              from './App';\nimport { AppProvider } from './contexts/AppContext';\n\n\nReactDOM.render(<AppProvider><App /></AppProvider>, document.getElementById('root'));\n\n"],"sourceRoot":""}